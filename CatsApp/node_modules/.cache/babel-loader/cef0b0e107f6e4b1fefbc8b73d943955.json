{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { API_LINK } from '../../helpers/constants'; // import { API_LINK } from '../../helpers/constants';\n\nexport const gettingCats = createAsyncThunk('cats/gettingCats', async (info, thunkAPI) => {\n  try {\n    const {\n      id,\n      page\n    } = info;\n    const resp = await axios(`${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`);\n    return resp.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue('something went wrong');\n  }\n});\nconst catsSlice = createSlice({\n  name: 'cats',\n  initialState: {\n    catsList: [],\n    catsMoreList: [],\n    catsStatus: 'pending'\n  },\n  reducers: {\n    gettingCatsList(state, action) {\n      console.log(action);\n      state.catsList = [...action.payload];\n    },\n\n    gettingMoreCats(state, action) {\n      state.catsList = [...state.catsList];\n      console.log(state.catsMoreList, action);\n    },\n\n    setStatus(state, action) {\n      state.catsStatus = action.payload;\n    },\n\n    getMoreCats(state, action) {\n      state.catsMoreList = [...state.catsList, action.payload];\n    }\n\n  },\n  extraReducers: {\n    [gettingCats.pending]: state => {\n      state.catsStatus = 'pending';\n    },\n    [gettingCats.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.catsStatus = 'success';\n      state.catsList = payload;\n    },\n    [gettingCats.rejected]: state => state.catsStatus = 'error'\n  }\n});\nexport const catsActions = catsSlice.actions;\nexport default catsSlice;","map":{"version":3,"sources":["/Users/serine/Desktop/Redux_projects/src/store/slices/catsSlice.js"],"names":["createAsyncThunk","createSlice","axios","API_LINK","gettingCats","info","thunkAPI","id","page","resp","data","error","rejectWithValue","catsSlice","name","initialState","catsList","catsMoreList","catsStatus","reducers","gettingCatsList","state","action","console","log","payload","gettingMoreCats","setStatus","getMoreCats","extraReducers","pending","fulfilled","rejected","catsActions","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,yBAAzB,C,CACA;;AAEA,OAAO,MAAMC,WAAW,GAAGJ,gBAAgB,CACzC,kBADyC,EAEzC,OAAOK,IAAP,EAAaC,QAAb,KAA0B;AACxB,MAAI;AACF,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAeH,IAArB;AACA,UAAMI,IAAI,GAAG,MAAMP,KAAK,CAAE,GAAEC,QAAS,gCAA+BK,IAAK,iBAAgBD,EAAG,EAApE,CAAxB;AAEA,WAAOE,IAAI,CAACC,IAAZ;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,WAAOL,QAAQ,CAACM,eAAT,CAAyB,sBAAzB,CAAP;AACD;AACF,CAXwC,CAApC;AAcP,MAAMC,SAAS,GAAGZ,WAAW,CAAC;AAC5Ba,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,YAAY,EAAE,EAFF;AAGZC,IAAAA,UAAU,EAAE;AAHA,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAD,MAAAA,KAAK,CAACL,QAAN,GAAiB,CAAC,GAAGM,MAAM,CAACG,OAAX,CAAjB;AACD,KAJO;;AAKRC,IAAAA,eAAe,CAACL,KAAD,EAAQC,MAAR,EAAgB;AAC7BD,MAAAA,KAAK,CAACL,QAAN,GAAiB,CAAC,GAAGK,KAAK,CAACL,QAAV,CAAjB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACJ,YAAlB,EAAgCK,MAAhC;AACD,KARO;;AASRK,IAAAA,SAAS,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACH,UAAN,GAAmBI,MAAM,CAACG,OAA1B;AACD,KAXO;;AAYRG,IAAAA,WAAW,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACJ,YAAN,GAAqB,CAAC,GAAGI,KAAK,CAACL,QAAV,EAAoBM,MAAM,CAACG,OAA3B,CAArB;AACD;;AAdO,GAPkB;AAuB5BI,EAAAA,aAAa,EAAE;AACb,KAACzB,WAAW,CAAC0B,OAAb,GAAwBT,KAAD,IAAW;AAChCA,MAAAA,KAAK,CAACH,UAAN,GAAmB,SAAnB;AACD,KAHY;AAIb,KAACd,WAAW,CAAC2B,SAAb,GAAyB,CAACV,KAAD,WAAwB;AAAA,UAAhB;AAAEI,QAAAA;AAAF,OAAgB;AAC/CJ,MAAAA,KAAK,CAACH,UAAN,GAAmB,SAAnB;AACAG,MAAAA,KAAK,CAACL,QAAN,GAAiBS,OAAjB;AACD,KAPY;AAQb,KAACrB,WAAW,CAAC4B,QAAb,GAAyBX,KAAD,IAAWA,KAAK,CAACH,UAAN,GAAmB;AARzC;AAvBa,CAAD,CAA7B;AAmCA,OAAO,MAAMe,WAAW,GAAGpB,SAAS,CAACqB,OAA9B;AACP,eAAerB,SAAf","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { API_LINK } from '../../helpers/constants';\n// import { API_LINK } from '../../helpers/constants';\n\nexport const gettingCats = createAsyncThunk(\n  'cats/gettingCats',\n  async (info, thunkAPI) => {\n    try {\n      const { id, page } = info;\n      const resp = await axios(`${API_LINK}/images/search?limit=10&page=${page}&category_ids=${id}`);\n\n      return resp.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue('something went wrong');\n    }\n  }\n);\n\nconst catsSlice = createSlice({\n  name: 'cats',\n  initialState: {\n    catsList: [],\n    catsMoreList: [],\n    catsStatus: 'pending',\n  },\n  reducers: {\n    gettingCatsList(state, action) {\n      console.log(action);\n      state.catsList = [...action.payload];\n    },\n    gettingMoreCats(state, action) {\n      state.catsList = [...state.catsList];\n      console.log(state.catsMoreList, action);\n    },\n    setStatus(state, action) {\n      state.catsStatus = action.payload;\n    },\n    getMoreCats(state, action) {\n      state.catsMoreList = [...state.catsList, action.payload];\n    }\n  },\n  extraReducers: {\n    [gettingCats.pending]: (state) => {\n      state.catsStatus = 'pending';\n    },\n    [gettingCats.fulfilled]: (state, { payload }) => {\n      state.catsStatus = 'success';\n      state.catsList = payload;\n    },\n    [gettingCats.rejected]: (state) => state.catsStatus = 'error',\n  }\n});\n\nexport const catsActions = catsSlice.actions;\nexport default catsSlice;\n"]},"metadata":{},"sourceType":"module"}